package ext.grid;

import javax.faces.context.FacesContext;

import ext.annotation.InstanceOf;
import ext.base.ExtOutput;

/**
 *Note:This java code is auto generated by abner,do not edit it. A specific <a
 * href="output/Ext.data.Record.html"
 * ext:cls="Ext.data.Record">Ext.data.Record</a> type that represents a
 * name/value pair and is made to work with the <a
 * href="output/Ext.grid.PropertyGrid.html"
 * ext:cls="Ext.grid.PropertyGrid">Ext.grid.PropertyGrid</a>. Typically,
 * PropertyRecords do not need to be created directly as they can be created
 * implicitly by simply using the appropriate data configs either via the <a
 * href="output/Ext.grid.PropertyGrid.html#Ext.grid.PropertyGrid-source"
 * ext:member="source"
 * ext:cls="Ext.grid.PropertyGrid">Ext.grid.PropertyGrid.source</a> config
 * property or by calling <a
 * href="output/Ext.grid.PropertyGrid.html#Ext.grid.PropertyGrid-setSource"
 * ext:member="setSource"
 * ext:cls="Ext.grid.PropertyGrid">Ext.grid.PropertyGrid.setSource</a>. However,
 * if the need arises, these records can also be created explicitly as shwon
 * below. Example usage:
 * 
 * <pre>
 * &lt;code&gt;&lt;b&gt;var&lt;/b&gt; rec = &lt;b&gt;new&lt;/b&gt; Ext.grid.PropertyRecord({
 *     name: &lt;em&gt;'Birthday'&lt;/em&gt;,
 *     value: &lt;b&gt;new&lt;/b&gt; Date(Date.parse(&lt;em&gt;'05/26/1972'&lt;/em&gt;))
 * });
 * &lt;i&gt;// Add record to an already populated grid&lt;/i&gt;
 * grid.store.addSorted(rec);&lt;/code&gt;
 * </pre>
 */
@InstanceOf("Ext.grid.PropertyRecord")
public class PropertyRecord extends ExtOutput {
	public static final String COMPONENT_TYPE = "Ext.grid.PropertyRecord";
	public static final String COMPONENT_FAMILY = "Ext.grid.PropertyRecord";

	/**
	 * <p>
	 * Create a new {@link PropertyRecord} instance with default property
	 * values.
	 * </p>
	 */
	public PropertyRecord() {
		super();
		setRendererType(COMPONENT_FAMILY);
	}

	public String getFamily() {
		return (COMPONENT_FAMILY);
	}

	private Object[] _values;

	public Object saveState(FacesContext _context) {
		if (_values == null) {
			_values = new Object[1];
		}
		_values[0] = super.saveState(_context);

		return _values;
	}

	public void restoreState(FacesContext _context, Object _state) {
		_values = (Object[]) _state;
		super.restoreState(_context, _values[0]);

	}
}