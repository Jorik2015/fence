package ext.grid;

import javax.el.ValueExpression;
import javax.faces.context.FacesContext;

import ext.annotation.InstanceOf;
import ext.annotation.ParseConfigMode;
import ext.annotation.PersistenceMode;
import ext.annotation.ReferenceMode;

/**
 *Note:This java code is auto generated by abner,do not edit it.
 * 
 * <p>
 * A Column definition class which renders a value by processing a <a
 * href="output/Ext.data.Record.html" ext:cls="Ext.data.Record">Record</a>'s <a
 * href="output/Ext.data.Record.html#Ext.data.Record-data" ext:member="data"
 * ext:cls="Ext.data.Record">data</a> using a <a
 * href="output/Ext.grid.TemplateColumn.html#Ext.grid.TemplateColumn-tpl"
 * ext:member="tpl" ext:cls="Ext.grid.TemplateColumn">configured</a> <a
 * href="output/Ext.XTemplate.html" ext:cls="Ext.XTemplate">XTemplate</a>. See
 * the <a href="output/Ext.grid.ColumnModel.html#Ext.grid.ColumnModel-xtype"
 * ext:member="xtype" ext:cls="Ext.grid.ColumnModel">xtype</a> config option of
 * <a href="output/Ext.grid.ColumnModel.html"
 * ext:cls="Ext.grid.ColumnModel">Ext.grid.ColumnModel</a> for more details.
 * </p>
 */
@InstanceOf("Ext.grid.TemplateColumn")
@ParseConfigMode(ui = false, name = "columns", pmode = PersistenceMode.ParentProperty, rmode = ReferenceMode.Var)
public class TemplateColumn extends Column {
	public static final String COMPONENT_TYPE = "Ext.grid.TemplateColumn";
	public static final String COMPONENT_FAMILY = "Ext.grid.TemplateColumn";

	/**
	 * <p>
	 * Create a new {@link TemplateColumn} instance with default property
	 * values.
	 * </p>
	 */
	public TemplateColumn() {
		super();
		setRendererType(COMPONENT_FAMILY);
	}

	public String getFamily() {
		return (COMPONENT_FAMILY);
	}

	private String tpl;

	/**
	 * An <a href="output/Ext.XTemplate.html"
	 * ext:cls="Ext.XTemplate">XTemplate</a>, or an XTemplate<i>definition
	 * string</i> to use to process a <a href="output/Ext.data.Record.html"
	 * ext:cls="Ext.data.Record">Record</a>'s <a
	 * href="output/Ext.data.Record.html#Ext.data.Record-data" ext:member="data"
	 * ext:cls="Ext.data.Record">data</a> to produce a column's rendered value.
	 */
	public String getTpl() {
		if (null != this.tpl) {
			return this.tpl;
		}
		ValueExpression _ve = getValueExpression("tpl");
		if (_ve != null) {
			return (String) _ve.getValue(getFacesContext().getELContext());
		} else {
			return null;
		}
	}

	/**
	 * <p>
	 * Set the value of the <code>tpl</code> property.
	 * </p>
	 */
	public void setTpl(String tpl) {
		this.tpl = tpl;
		this.handleConfig("tpl", tpl);
	}

	private Object[] _values;

	public Object saveState(FacesContext _context) {
		if (_values == null) {
			_values = new Object[2];
		}
		_values[0] = super.saveState(_context);
		_values[1] = tpl;

		return _values;
	}

	public void restoreState(FacesContext _context, Object _state) {
		_values = (Object[]) _state;
		super.restoreState(_context, _values[0]);
		this.tpl = (String) _values[1];
		this.handleConfig("tpl", this.tpl);

	}
}