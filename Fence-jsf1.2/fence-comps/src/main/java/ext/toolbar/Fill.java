package ext.toolbar;

import javax.faces.context.FacesContext;

import ext.annotation.InstanceOf;
import ext.annotation.ParseConfigMode;
import ext.annotation.PersistenceMode;
import ext.annotation.ReferenceMode;
import ext.annotation.XType;

/**
 *Note:This java code is auto generated by abner,do not edit it. A
 * non-rendering placeholder item which instructs the Toolbar's Layout to begin
 * using the right-justified button container.
 * 
 * <pre>
 * &lt;code&gt;&lt;b&gt;new&lt;/b&gt; Ext.Panel({
 *     tbar : [
 *         &lt;em&gt;'Item 1'&lt;/em&gt;,
 *         {xtype: &lt;em&gt;'tbfill'&lt;/em&gt;}, &lt;i&gt;// or &lt;em&gt;'-&gt;'&lt;/em&gt;
 * &lt;/i&gt;
 *         &lt;em&gt;'Item 2'&lt;/em&gt;
 *     ]
 * });&lt;/code&gt;
 * </pre>
 */
@XType("tbfill")
@InstanceOf("Ext.Toolbar.Fill")
@ParseConfigMode(name = "items", pmode = PersistenceMode.ParentProperty, rmode = ReferenceMode.Config)
public class Fill extends Spacer {
	public static final String COMPONENT_TYPE = "Ext.Toolbar.Fill";
	public static final String COMPONENT_FAMILY = "Ext.Toolbar.Fill";

	/**
	 * <p>
	 * Create a new {@link Fill} instance with default property values.
	 * </p>
	 */
	public Fill() {
		super();
		setRendererType(COMPONENT_FAMILY);
	}

	public String getFamily() {
		return (COMPONENT_FAMILY);
	}

	private Object[] _values;

	public Object saveState(FacesContext _context) {
		if (_values == null) {
			_values = new Object[1];
		}
		_values[0] = super.saveState(_context);

		return _values;
	}

	public void restoreState(FacesContext _context, Object _state) {
		_values = (Object[]) _state;
		super.restoreState(_context, _values[0]);

	}
}