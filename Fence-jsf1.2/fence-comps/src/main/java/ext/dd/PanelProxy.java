package ext.dd;

import javax.el.ValueExpression;
import javax.faces.context.FacesContext;

import ext.base.ExtOutput;

/**
 *Note:This java code is auto generated by abner,do not edit it. A custom drag
 * proxy implementation specific to <a href="output/Ext.Panel.html"
 * ext:cls="Ext.Panel">Ext.Panel</a>s. This class is primarily used internally
 * for the Panel's drag drop implementation, and should never need to be created
 * directly.
 */
public class PanelProxy extends ExtOutput {
	public static final String COMPONENT_TYPE = "Ext.dd.PanelProxy";

	/**
	 * <p>
	 * Create a new {@link PanelProxy} instance with default property values.
	 * </p>
	 */
	public PanelProxy() {
		super();
		setRendererType(COMPONENT_TYPE);
	}

	public String getFamily() {
		return (COMPONENT_TYPE);
	}

	private Boolean insertProxy;

	/**
	 * True to insert a placeholder proxy element whiledragging the panel, false
	 * to drag with no proxy (defaults to true).
	 */
	public Boolean getInsertProxy() {
		if (null != this.insertProxy) {
			return this.insertProxy;
		}
		ValueExpression _ve = getValueExpression("insertProxy");
		if (_ve != null) {
			return (Boolean) _ve.getValue(getFacesContext().getELContext());
		} else {
			return null;
		}
	}

	/**
	 * <p>
	 * Set the value of the <code>insertProxy</code> property.
	 * </p>
	 */
	public void setInsertProxy(Boolean insertProxy) {
		this.insertProxy = insertProxy;
		handleConfig("insertProxy", insertProxy);
	}

	private Object[] _values;

	public Object saveState(FacesContext _context) {
		if (_values == null) {
			_values = new Object[2];
		}
		_values[0] = super.saveState(_context);
		_values[1] = insertProxy;

		return _values;
	}

	public void restoreState(FacesContext _context, Object _state) {
		_values = (Object[]) _state;
		super.restoreState(_context, _values[0]);
		this.insertProxy = (Boolean) _values[1];
		this.handleConfig("insertProxy", this.insertProxy);

	}
}