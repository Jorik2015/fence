<tag><description>    <![CDATA[
<p>Provides Ext.direct support for submitting form data.</p>

<p>This example illustrates usage of Ext.Direct to <b>submit</b> a
form through Ext.Direct.</p>

<pre><code><b>var</b> myFormPanel = <b>new</b> Ext.form.FormPanel({
    <i>// configs <b>for</b> FormPanel
</i>
    title: <em>'Basic Information'</em>,
    renderTo: document.body,
    width: 300, height: 160,
    padding: 10,
    buttons:[{
        text: <em>'Submit'</em>,
        handler: <b>function</b>(){
            myFormPanel.getForm().submit({
                params: {
                    foo: <em>'bar'</em>,
                    uid: 34
                }
            });
        }
    }],

    <i>// configs apply to child items
</i>
    defaults: {anchor: <em>'100%'</em>},
    defaultType: <em>'textfield'</em>,
    items: [{
        fieldLabel: <em>'Name'</em>,
        name: <em>'name'</em>
    },{
        fieldLabel: <em>'Email'</em>,
        name: <em>'email'</em>
    },{
        fieldLabel: <em>'Company'</em>,
        name: <em>'company'</em>
    }],

    <i>// configs <b>for</b> BasicForm
</i>
    api: {
        <i>// The server-side method to call <b>for</b> load() requests
</i>
        load: Profile.getBasicInfo,
        <i>// The server-side must mark the submit handler as a <em>'formHandler'</em>
</i>
        submit: Profile.updateBasicInfo
    },
    <i>// specify the order <b>for</b> the passed params
</i>
    paramOrder: [<em>'uid'</em>, <em>'foo'</em>]
});</code>
</pre>

The data packet sent to the server will resemble something like: 

<pre><code>{
    <em>"action"</em>:<em>"Profile"</em>,<em>"method"</em>:<em>"updateBasicInfo"</em>,<em>"type"</em>:<em>"rpc"</em>,<em>"tid"</em>:<em>"6"</em>,
    <em>"result"</em>:{
        <em>"success"</em>:true,
        <em>"id"</em>:{
            <em>"extAction"</em>:<em>"Profile"</em>,<em>"extMethod"</em>:<em>"updateBasicInfo"</em>,
            <em>"extType"</em>:<em>"rpc"</em>,<em>"extTID"</em>:<em>"6"</em>,<em>"extUpload"</em>:<em>"false"</em>,
            <em>"name"</em>:<em>"Aaron Conran"</em>,<em>"email"</em>:<em>"aaron@extjs.com"</em>,<em>"company"</em>:<em>"Ext JS, LLC"</em>
        }
    }
}</code>
</pre>

The form will process a data packet returned by the server that is
similar to the following: 

<pre><code><i>// sample success packet (batched requests)
</i>
[
    {
        <em>"action"</em>:<em>"Profile"</em>,<em>"method"</em>:<em>"updateBasicInfo"</em>,<em>"type"</em>:<em>"rpc"</em>,<em>"tid"</em>:3,
        <em>"result"</em>:{
            <em>"success"</em>:true
        }
    }
]

<i>// sample failure packet (one request)
</i>
{
        <em>"action"</em>:<em>"Profile"</em>,<em>"method"</em>:<em>"updateBasicInfo"</em>,<em>"type"</em>:<em>"rpc"</em>,<em>"tid"</em>:<em>"6"</em>,
        <em>"result"</em>:{
            <em>"errors"</em>:{
                <em>"email"</em>:<em>"already taken"</em>
            },
            <em>"success"</em>:false,
            <em>"foo"</em>:<em>"bar"</em>
        }
}</code>
</pre>

Also see the discussion in <a href="output/Ext.form.Action.DirectLoad.html" ext:cls="Ext.form.Action.DirectLoad">Ext.form.Action.DirectLoad</a>.]]></description><name>directsubmit</name><tag-class></tag-class><body-content>JSP</body-content><attribute>	<description>        <![CDATA[Determines whether a Form's fields are validatedin a final call to <a href="output/Ext.form.BasicForm.html#Ext.form.BasicForm-isValid" ext:member="isValid" ext:cls="Ext.form.BasicForm">isValid</a> prior
to submission. Pass <tt>false</tt> in the Form's submit options to
prevent this. If not defined, pre-submission field validation is
performed.]]>    </description>	<name>clientValidation</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[<p><b>Optional. JSON is interpreted with no need for an
errorReader.</b></p>

<p>A Reader which reads a single record from the returned data. The
DataReader's <b>success</b> property specifies how submission
success is determined. The Record's data provides the error
messages to apply to any invalid form Fields.</p>
]]>    </description>	<name>errorReader</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[The function to call when a failure packet wasrecieved, or when an error ocurred in the Ajax communication. The
function is passed the following parameters:

<ul class="mdetail-params">
<li><b>form</b> : Ext.form.BasicForm

<div class="sub-desc">The form that requested the action</div>
</li>

<li><b>action</b> : Ext.form.Action

<div class="sub-desc">The Action class. If an Ajax error ocurred,
the failure type will be in <a href="output/Ext.form.Action.html#Ext.form.Action-failureType" ext:member="failureType" ext:cls="Ext.form.Action">failureType</a>.
The <a href="output/Ext.form.Action.html#Ext.form.Action-result" ext:member="result" ext:cls="Ext.form.Action">result</a> property
of this object may be examined to perform custom
postprocessing.</div>
</li>
</ul>
]]>    </description>	<name>failure</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[The HTTP method to use to access the requestedURL. Defaults to the <a href="output/Ext.form.BasicForm.html" ext:cls="Ext.form.BasicForm">Ext.form.BasicForm</a>'s method, or if
that is not specified, the underlying DOM form's method.]]>    </description>	<name>method</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[<p>Extra parameter values to pass. These are added to the Form's <a href="output/Ext.form.BasicForm.html#Ext.form.BasicForm-baseParams" ext:member="baseParams" ext:cls="Ext.form.BasicForm">Ext.form.BasicForm.baseParams</a> and
passed to the specified URL along with the Form's input fields.</p>

<p>Parameters are encoded as standard HTTP parameters using <a href="output/Ext.html#Ext-urlEncode" ext:member="urlEncode" ext:cls="Ext">Ext.urlEncode</a>.</p>
]]>    </description>	<name>params</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[When set to <tt><b>true</b></tt>, causes the Formto be <a href="output/Ext.form.BasicForm.reset.html" ext:cls="Ext.form.BasicForm.reset">reset</a> on Action success. If
specified, this happens <b>before</b> the <a href="output/Ext.form.Action.html#Ext.form.Action-success" ext:member="success" ext:cls="Ext.form.Action">success</a> callback
is called and before the Form's <a href="output/Ext.form.BasicForm.actioncomplete.html" ext:cls="Ext.form.BasicForm.actioncomplete">actioncomplete</a>
event fires.]]>    </description>	<name>reset</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[The scope in which to call the callbackfunctions (The <tt>this</tt> reference for the callback
functions).]]>    </description>	<name>scope</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[The function to call when a valid success returnpacket is recieved. The function is passed the following
parameters:

<ul class="mdetail-params">
<li><b>form</b> : Ext.form.BasicForm

<div class="sub-desc">The form that requested the action</div>
</li>

<li><b>action</b> : Ext.form.Action

<div class="sub-desc">The Action class. The <a href="output/Ext.form.Action.html#Ext.form.Action-result" ext:member="result" ext:cls="Ext.form.Action">result</a> property
of this object may be examined to perform custom
postprocessing.</div>
</li>
</ul>
]]>    </description>	<name>success</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[The number of seconds to wait for a serverresponse before failing with the <a href="output/Ext.form.Action.html#Ext.form.Action-failureType" ext:member="failureType" ext:cls="Ext.form.Action">failureType</a>
as <a href="output/Ext.form.Action.html#Ext.form.Action-Action.CONNECT_FAILURE" ext:member="Action.CONNECT_FAILURE" ext:cls="Ext.form.Action">Action.CONNECT_FAILURE</a>. If not
specified, defaults to the configured <tt><a href="output/Ext.form.BasicForm.html#Ext.form.BasicForm-timeout" ext:member="timeout" ext:cls="Ext.form.BasicForm">timeout</a></tt>
of the <a href="output/Ext.form.BasicForm.html" ext:cls="Ext.form.BasicForm">form</a>.]]>    </description>	<name>timeout</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[The URL that the Action is to invoke.]]>    </description>	<name>url</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[The message to be displayed by a call to <a href="output/Ext.MessageBox.html#Ext.MessageBox-wait" ext:member="wait" ext:cls="Ext.MessageBox">Ext.MessageBox.wait</a>during the time the action is being processed.]]>    </description>	<name>waitMsg</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[The title to be displayed by a call to <a href="output/Ext.MessageBox.html#Ext.MessageBox-wait" ext:member="wait" ext:cls="Ext.MessageBox">Ext.MessageBox.wait</a>during the time the action is being processed.]]>    </description>	<name>waitTitle</name>	<required>false</required></attribute></tag>