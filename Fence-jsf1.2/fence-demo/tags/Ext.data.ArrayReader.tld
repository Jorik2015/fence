<tag><description>    <![CDATA[
<p>Data reader class to create an Array of <a href="output/Ext.data.Record.html" ext:cls="Ext.data.Record">Ext.data.Record</a> objects from an
Array. Each element of that Array represents a row of data fields.
The fields are pulled into a Record object using as a subscript,
the <code>mapping</code> property of the field definition if it
exists, or the field's ordinal position in the definition.</p>

<p>Example code:</p>

<pre><code><b>var</b> Employee = Ext.data.Record.create([
    {name: <em>'name'</em>, mapping: 1},         <i>// <em>"mapping"</em> only needed <b>if</b> an <em>"id"</em> field is present which</i>
    {name: <em>'occupation'</em>, mapping: 2}    <i>// precludes using the ordinal position as the index.</i>
]);
<b>var</b> myReader = <b>new</b> Ext.data.ArrayReader({
    <a href="output/Ext.data.ArrayReader.html#Ext.data.ArrayReader-idIndex" ext:member="idIndex" ext:cls="Ext.data.ArrayReader">idIndex</a>: 0
}, Employee);</code>
</pre>

<p>This would consume an Array like this:</p>

<pre><code>[ [1, <em>'Bill'</em>, <em>'Gardener'</em>], [2, <em>'Ben'</em>, <em>'Horticulturalist'</em>] ]</code>
</pre>
]]></description><name>arrayreader</name><tag-class></tag-class><body-content>JSP</body-content><attribute>	<description>        <![CDATA[<p>Either an Array of <a href="output/Ext.data.Field.html" ext:cls="Ext.data.Field">Field</a> definition objects (which will
be passed to <a href="output/Ext.data.Record.html#Ext.data.Record-create" ext:member="create" ext:cls="Ext.data.Record">Ext.data.Record.create</a>, or a <a href="output/Ext.data.Record.html" ext:cls="Ext.data.Record">Record</a> constructor created from <a href="output/Ext.data.Record.html#Ext.data.Record-create" ext:member="create" ext:cls="Ext.data.Record">Ext.data.Record.create</a>.</p>
]]>    </description>	<name>fields</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[The subscript within row Array that provides anID for the Record. Deprecated. Use <a href="output/Ext.data.ArrayReader.html#Ext.data.ArrayReader-idIndex" ext:member="idIndex" ext:cls="Ext.data.ArrayReader">idIndex</a>
instead.]]>    </description>	<name>id</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[The subscript within row Array that provides anID for the Record.]]>    </description>	<name>idIndex</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[[id] Name of the property within a row objectthat contains a record identifier value. Defaults to
<tt>id</tt>]]>    </description>	<name>idProperty</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[[undefined] Optional name of a property within aserver-response that represents a user-feedback message.]]>    </description>	<name>messageProperty</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[[undefined] <b>Required</b>. The name of theproperty which contains the Array of row objects. Defaults to
<tt>undefined</tt>. An exception will be thrown if the root
property is undefined. The data packet value for this property
should be an empty array to clear the data or show no data.]]>    </description>	<name>root</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[[total] Name of the property from which toretrieve the total number of records in the dataset. This is only
needed if the whole dataset is not passed in one go, but is being
paged from the remote server. Defaults to <tt>total</tt>.]]>    </description>	<name>totalProperty</name>	<required>false</required></attribute></tag>