<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core" xmlns:s="http://fence.com/ext"
	template="/layout/part.xhtml">
	<ui:define name="pageTitle">Button</ui:define>
	<ui:define name="pageHeader">
		<script type="text/javascript"> //<![CDATA[
	var fun1 = function(src,e){
		alert("fun1" +src);
	};
	//]]> </script>
	</ui:define>
	<ui:define name="body">
		<div class="introduction">
		<h1>Button说明</h1>
		<p>按钮type有load,submit,button,client,reset几种类型.load默认执行form.load()动作，submit默认执行submit动作，只有submit提交form数据。load,submit,reset只当button在formpanel里才有效。
		button默认发送request请求，client则忽略所有服务端动作，只在客户端执行事件。 <br />
		1、按钮新增confirmText属性，设置此属性后，按钮一切动作将在确认后执行。模拟的alert效果。 <br />
		2、按钮新增successFn属性，当action执行完毕成功后将执行此fun，参数为action. <br />
		3、formpanel新增属性showErrorType用来显示错误消息的方式，值可以为alert(弹出消息框)、bar(使用状态栏显示，需要安装插件)、默认为空，即只在输入框显示错误验证信息。
		此属性值在submit时才有效。TODO <br />
		4、按钮的高级使用技巧一：submit默认提交form的所有field的值，所以不担心参数的赋值问题，对于load和button按钮来说，默认不提交form的field值（ext的模式），所以如果想在load和button类型的按钮中加入参数，可以使用
		s:hidden来传递，此时s:hidden要写在s:button标签里面； <br />
		5、按钮的高级使用技巧二：与服务端要打交道的按钮，submit,load,button的ajax请求参数都可以自定义，当然默认在fence中已经处理，如果要自定义，请使用s:submit,s:load,s:requestoptions(s:rqtoptions)三个选项，选项属性与ext对应。
		此三个组件都支持jsf的f:param参数组件。 <br />
		5、按钮的高级使用技巧三：按钮新增render属性，此属性代表按钮动作将重新渲染某一区域，属性可以是一组件id，也可以多个组件id，多个使用英文逗号隔开。 <br />
		</p>
		</div>
	</ui:define>
</ui:composition>