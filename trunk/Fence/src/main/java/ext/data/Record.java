package ext.data;

import javax.el.ValueExpression;
import com.abner.fence.annotation.*;
import com.abner.fence.commons.Enums.*;
import com.abner.fence.component.*;

import javax.faces.component.FacesComponent;
import javax.faces.component.UIComponent;
import javax.faces.component.UIOutput;
import javax.faces.context.FacesContext;
import javax.faces.render.Renderer;
import ext.*;
import ext.dd.*;
import ext.util.*;
import ext.data.*;
import ext.grid.*;
import ext.form.*;
import ext.tree.*;
import ext.layout.*;
import ext.menu.*;
import java.util.*;
import ext.form.Action;
import java.util.Date;

/**
 * 
    Instances of this class encapsulate both Record 
    definition information, and Record 
    value information for use in 
    Ext.data.Store objects, or any
    code which needs to access Records cached in an 
    Ext.data.Store object.
    Constructors for this class are generated by passing an
    Array of field definition objects to 
    create.
    Instances are usually only created by 
    Ext.data.Reader implementations
    when processing unformatted data objects.
    Note that an instance of a Record class may only belong to
    one 
    Store at a time. In order to copy
    data from one Store to another, use the 
    copy method to
    create an exact copy of the Record, and insert the new instance
    into the other Store.
    When serializing a Record for submission to the server, be
    aware that it contains many private properties, and also a
    reference to its owning Store which in turn holds references to
    its Records. This means that a whole Record may not be encoded
    using 
    Ext.util.JSON.encode.
    Instead, use the 
    
      data
     and 
    
      id
     properties.
    Record objects generated by this constructor inherit all the
    methods of Ext.data.Record listed below.
  
 */

@InstanceOf("Ext.data.Record")

@FacesComponent(value = "Ext.data.Record")
public class Record extends ExtComponent {
	public static final String COMPONENT_FAMILY = "Ext.data.Record";

	/**
	 * <p>
	 * Create a new {@link Ext.data.Record} instance with default property values.
	 * </p>
	 */
	public Record() {
		super();
		this.setRendererType(COMPONENT_FAMILY);
	}

	public String getFamily() {
		return (COMPONENT_FAMILY);
	}
	
	    
    @Override
	public String getDefaultEventName() {
		return super.getDefaultEventName();
	}

	@Override
	public Collection<String> getEventNames() {
		Collection<String> superEvent = super.getEventNames();
				return superEvent;
	}
}