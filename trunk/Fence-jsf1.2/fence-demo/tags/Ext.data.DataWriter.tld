<tag><description>    <![CDATA[
<p>Ext.data.DataWriter facilitates create, update, and destroy
actions between an Ext.data.Store and a server-side framework. A
Writer enabled Store will automatically manage the Ajax requests to
perform CRUD actions on a Store.</p>

<p>Ext.data.DataWriter is an abstract base class which is intended
to be extended and should not be created directly. For existing
implementations, see <a href="output/Ext.data.JsonWriter.html" ext:cls="Ext.data.JsonWriter">Ext.data.JsonWriter</a>.</p>

<p>Creating a writer is simple:</p>

<pre><code><b>var</b> writer = <b>new</b> Ext.data.JsonWriter();</code>
</pre>

<p>The proxy for a writer enabled store can be configured with a
simple <code>url</code>:</p>

<pre><code><i>// Create a standard HttpProxy instance.</i>
<b>var</b> proxy = <b>new</b> Ext.data.HttpProxy({
    url: <em>'app.php/users'</em>
});</code>
</pre>

<p>For finer grained control, the proxy may also be configured with
an <code>api</code>:</p>

<pre><code><i>// Use the api specification</i>
<b>var</b> proxy = <b>new</b> Ext.data.HttpProxy({
    api: {
        read    : <em>'app.php/users/read'</em>,
        create  : <em>'app.php/users/create'</em>,
        update  : <em>'app.php/users/update'</em>,
        destroy : <em>'app.php/users/destroy'</em>
    }
});</code>
</pre>

<p>Creating a Writer enabled store:</p>

<pre><code><b>var</b> store = <b>new</b> Ext.data.Store({
    proxy: proxy,
    reader: reader,
    writer: writer
});</code>
</pre>
]]></description><name>datawriter</name><tag-class></tag-class><body-content>JSP</body-content><attribute>	<description>        <![CDATA[Abstract method that should be implemented inall subclasses (e.g.: <a href="output/Ext.data.JsonWriter.html#Ext.data.JsonWriter-createRecord" ext:member="createRecord" ext:cls="Ext.data.JsonWriter">JsonWriter.createRecord</a>)]]>    </description>	<name>createRecord</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[Abstract method that should be implemented inall subclasses (e.g.: <a href="output/Ext.data.JsonWriter.html#Ext.data.JsonWriter-destroyRecord" ext:member="destroyRecord" ext:cls="Ext.data.JsonWriter">JsonWriter.destroyRecord</a>)]]>    </description>	<name>destroyRecord</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[<tt>false</tt> by default. Set <tt>true</tt> tohave the DataWriter <b>always</b> write HTTP params as a list, even
when acting upon a single record.]]>    </description>	<name>listful</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[Abstract method that should be implemented inall subclasses (e.g.: <a href="output/Ext.data.JsonWriter.html#Ext.data.JsonWriter-updateRecord" ext:member="updateRecord" ext:cls="Ext.data.JsonWriter">JsonWriter.updateRecord</a>]]>    </description>	<name>updateRecord</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[<tt>false</tt> by default. Set <tt>true</tt> tohave DataWriter return ALL fields of a modified record -- not just
those that changed. <tt>false</tt> to have DataWriter only request
modified fields from a record.]]>    </description>	<name>writeAllFields</name>	<required>false</required></attribute></tag>