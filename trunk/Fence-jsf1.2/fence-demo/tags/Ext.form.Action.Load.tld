<tag><description>    <![CDATA[
<p>A class which handles loading of data from a server into the
Fields of an <a href="output/Ext.form.BasicForm.html" ext:cls="Ext.form.BasicForm">Ext.form.BasicForm</a>.</p>

<p>Instances of this class are only created by a <a href="output/Ext.form.BasicForm.html" ext:cls="Ext.form.BasicForm">Form</a> when <a href="output/Ext.form.BasicForm.html#Ext.form.BasicForm-load" ext:member="load" ext:cls="Ext.form.BasicForm">load</a>ing.</p>

<p><u><b>Response Packet Criteria</b></u></p>

<p>A response packet <b>must</b> contain:</p>

<div class="mdetail-params">
<ul>
<li><b><code>success</code></b> property : Boolean</li>

<li><b><code>data</code></b> property : Object</li>

<li style="list-style-type: none; list-style-image: none; list-style-position: outside;">
<div class="sub-desc">The <code>data</code> property contains the
values of Fields to load. The individual value object for each
Field is passed to the Field's <a href="output/Ext.form.Field.html#Ext.form.Field-setValue" ext:member="setValue" ext:cls="Ext.form.Field">setValue</a>
method.</div>
</li>
</ul>
</div>

<p><u><b>JSON Packets</b></u></p>

<p>By default, response packets are assumed to be JSON, so for the
following form load call:</p>

<pre><code><b>var</b> myFormPanel = <b>new</b> Ext.form.FormPanel({
    title: <em>'Client and routing info'</em>,
    items: [{
        fieldLabel: <em>'Client'</em>,
        name: <em>'clientName'</em>
    }, {
        fieldLabel: <em>'Port of loading'</em>,
        name: <em>'portOfLoading'</em>
    }, {
        fieldLabel: <em>'Port of discharge'</em>,
        name: <em>'portOfDischarge'</em>
    }]
});
myFormPanel.<a href="output/Ext.form.FormPanel.html#Ext.form.FormPanel-getForm" ext:member="getForm" ext:cls="Ext.form.FormPanel">getForm</a>().<a href="output/Ext.form.BasicForm.html#Ext.form.BasicForm-load" ext:member="load" ext:cls="Ext.form.BasicForm">load</a>({
    url: <em>'/getRoutingInfo.php'</em>,
    params: {
        consignmentRef: myConsignmentRef
    },
    failure: <b>function</b>(form, action) {
        Ext.Msg.alert(<em>"Load failed"</em>, action.result.errorMessage);
    }
});</code>
</pre>

a <b>success response</b> packet may look like this:<br>
<br>
<pre><code>{
    success: true,
    data: {
        clientName: <em>"Fred. Olsen Lines"</em>,
        portOfLoading: <em>"FXT"</em>,
        portOfDischarge: <em>"OSL"</em>
    }
}</code>
</pre>

while a <b>failure response</b> packet may look like this:<br>
<br>
<pre><code>{
    success: false,
    errorMessage: <em>"Consignment reference not found"</em>
}</code>
</pre>

<p>Other data may be placed into the response for processing the <a href="output/Ext.form.BasicForm.html" ext:cls="Ext.form.BasicForm">Form</a>'s callback or event handler
methods. The object decoded from this JSON is available in the <a href="output/Ext.form.Action.html#Ext.form.Action-result" ext:member="result" ext:cls="Ext.form.Action">result</a>
property.</p>
]]></description><name>load</name><tag-class></tag-class><body-content>JSP</body-content><attribute>	<description>        <![CDATA[The function to call when a failure packet wasrecieved, or when an error ocurred in the Ajax communication. The
function is passed the following parameters:

<ul class="mdetail-params">
<li><b>form</b> : Ext.form.BasicForm

<div class="sub-desc">The form that requested the action</div>
</li>

<li><b>action</b> : Ext.form.Action

<div class="sub-desc">The Action class. If an Ajax error ocurred,
the failure type will be in <a href="output/Ext.form.Action.html#Ext.form.Action-failureType" ext:member="failureType" ext:cls="Ext.form.Action">failureType</a>.
The <a href="output/Ext.form.Action.html#Ext.form.Action-result" ext:member="result" ext:cls="Ext.form.Action">result</a> property
of this object may be examined to perform custom
postprocessing.</div>
</li>
</ul>
]]>    </description>	<name>failure</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[The HTTP method to use to access the requestedURL. Defaults to the <a href="output/Ext.form.BasicForm.html" ext:cls="Ext.form.BasicForm">Ext.form.BasicForm</a>'s method, or if
that is not specified, the underlying DOM form's method.]]>    </description>	<name>method</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[<p>Extra parameter values to pass. These are added to the Form's <a href="output/Ext.form.BasicForm.html#Ext.form.BasicForm-baseParams" ext:member="baseParams" ext:cls="Ext.form.BasicForm">Ext.form.BasicForm.baseParams</a> and
passed to the specified URL along with the Form's input fields.</p>

<p>Parameters are encoded as standard HTTP parameters using <a href="output/Ext.html#Ext-urlEncode" ext:member="urlEncode" ext:cls="Ext">Ext.urlEncode</a>.</p>
]]>    </description>	<name>params</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[When set to <tt><b>true</b></tt>, causes the Formto be <a href="output/Ext.form.BasicForm.reset.html" ext:cls="Ext.form.BasicForm.reset">reset</a> on Action success. If
specified, this happens <b>before</b> the <a href="output/Ext.form.Action.html#Ext.form.Action-success" ext:member="success" ext:cls="Ext.form.Action">success</a> callback
is called and before the Form's <a href="output/Ext.form.BasicForm.actioncomplete.html" ext:cls="Ext.form.BasicForm.actioncomplete">actioncomplete</a>
event fires.]]>    </description>	<name>reset</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[The scope in which to call the callbackfunctions (The <tt>this</tt> reference for the callback
functions).]]>    </description>	<name>scope</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[The function to call when a valid success returnpacket is recieved. The function is passed the following
parameters:

<ul class="mdetail-params">
<li><b>form</b> : Ext.form.BasicForm

<div class="sub-desc">The form that requested the action</div>
</li>

<li><b>action</b> : Ext.form.Action

<div class="sub-desc">The Action class. The <a href="output/Ext.form.Action.html#Ext.form.Action-result" ext:member="result" ext:cls="Ext.form.Action">result</a> property
of this object may be examined to perform custom
postprocessing.</div>
</li>
</ul>
]]>    </description>	<name>success</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[The number of seconds to wait for a serverresponse before failing with the <a href="output/Ext.form.Action.html#Ext.form.Action-failureType" ext:member="failureType" ext:cls="Ext.form.Action">failureType</a>
as <a href="output/Ext.form.Action.html#Ext.form.Action-Action.CONNECT_FAILURE" ext:member="Action.CONNECT_FAILURE" ext:cls="Ext.form.Action">Action.CONNECT_FAILURE</a>. If not
specified, defaults to the configured <tt><a href="output/Ext.form.BasicForm.html#Ext.form.BasicForm-timeout" ext:member="timeout" ext:cls="Ext.form.BasicForm">timeout</a></tt>
of the <a href="output/Ext.form.BasicForm.html" ext:cls="Ext.form.BasicForm">form</a>.]]>    </description>	<name>timeout</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[The URL that the Action is to invoke.]]>    </description>	<name>url</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[The message to be displayed by a call to <a href="output/Ext.MessageBox.html#Ext.MessageBox-wait" ext:member="wait" ext:cls="Ext.MessageBox">Ext.MessageBox.wait</a>during the time the action is being processed.]]>    </description>	<name>waitMsg</name>	<required>false</required></attribute><attribute>	<description>        <![CDATA[The title to be displayed by a call to <a href="output/Ext.MessageBox.html#Ext.MessageBox-wait" ext:member="wait" ext:cls="Ext.MessageBox">Ext.MessageBox.wait</a>during the time the action is being processed.]]>    </description>	<name>waitTitle</name>	<required>false</required></attribute></tag>