package ext.form.action;

import javax.faces.context.FacesContext;

import ext.annotation.InstanceOf;
import ext.annotation.ParseConfigMode;
import ext.annotation.PersistenceMode;
import ext.annotation.ReferenceMode;
import ext.form.Action;

/**
 *Note:This java code is auto generated by abner,do not edit it.
 * 
 * <p>
 * A class which handles loading of data from a server into the Fields of an <a
 * href="output/Ext.form.BasicForm.html"
 * ext:cls="Ext.form.BasicForm">Ext.form.BasicForm</a>.
 * </p>
 * 
 * <p>
 * Instances of this class are only created by a <a
 * href="output/Ext.form.BasicForm.html" ext:cls="Ext.form.BasicForm">Form</a>
 * when <a href="output/Ext.form.BasicForm.html#Ext.form.BasicForm-load"
 * ext:member="load" ext:cls="Ext.form.BasicForm">load</a>ing.
 * </p>
 * 
 * <p>
 * <u><b>Response Packet Criteria</b></u>
 * </p>
 * 
 * <p>
 * A response packet <b>must</b> contain:
 * </p>
 * 
 * <div class="mdetail-params">
 * <ul>
 * <li><b><code>success</code></b> property : Boolean</li>
 * 
 * <li><b><code>data</code></b> property : Object</li>
 * 
 * <li style="list-style: none">
 * <div class="sub-desc">The <code>data</code> property contains the values of
 * Fields to load. The individual value object for each Field is passed to the
 * Field's <a href="output/Ext.form.Field.html#Ext.form.Field-setValue"
 * ext:member="setValue" ext:cls="Ext.form.Field">setValue</a> method.</div></li>
 * </ul>
 * </div>
 * 
 * <p>
 * <u><b>JSON Packets</b></u>
 * </p>
 * 
 * <p>
 * By default, response packets are assumed to be JSON, so for the following
 * form load call:
 * </p>
 * 
 * <pre>
 * &lt;code&gt;&lt;b&gt;var&lt;/b&gt; myFormPanel = &lt;b&gt;new&lt;/b&gt; Ext.form.FormPanel({
 *     title: &lt;em&gt;'Client and routing info'&lt;/em&gt;,
 *     items: [{
 *         fieldLabel: &lt;em&gt;'Client'&lt;/em&gt;,
 *         name: &lt;em&gt;'clientName'&lt;/em&gt;
 *     }, {
 *         fieldLabel: &lt;em&gt;'Port of loading'&lt;/em&gt;,
 *         name: &lt;em&gt;'portOfLoading'&lt;/em&gt;
 *     }, {
 *         fieldLabel: &lt;em&gt;'Port of discharge'&lt;/em&gt;,
 *         name: &lt;em&gt;'portOfDischarge'&lt;/em&gt;
 *     }]
 * });
 * myFormPanel.&lt;a href=&quot;output/Ext.form.FormPanel.html#Ext.form.FormPanel-getForm&quot; ext:member=&quot;getForm&quot; ext:cls=&quot;Ext.form.FormPanel&quot;&gt;getForm&lt;/a&gt;().&lt;a href=&quot;output/Ext.form.BasicForm.html#Ext.form.BasicForm-load&quot; ext:member=&quot;load&quot; ext:cls=&quot;Ext.form.BasicForm&quot;&gt;load&lt;/a&gt;({
 *     url: &lt;em&gt;'/getRoutingInfo.php'&lt;/em&gt;,
 *     params: {
 *         consignmentRef: myConsignmentRef
 *     },
 *     failure: &lt;b&gt;function&lt;/b&gt;(form, action() {
 *         Ext.Msg.alert(&lt;em&gt;&quot;Load failed&quot;&lt;/em&gt;, action.result.errorMessage);
 *     }
 * });&lt;/code&gt;
 * </pre>
 * 
 * a <b>success response</b> packet may look like this:<br>
 * <br>
 * 
 * <pre>
 * &lt;code&gt;{
 *     success: true,
 *     data: {
 *         clientName: &lt;em&gt;&quot;Fred. Olsen Lines&quot;&lt;/em&gt;,
 *         portOfLoading: &lt;em&gt;&quot;FXT&quot;&lt;/em&gt;,
 *         portOfDischarge: &lt;em&gt;&quot;OSL&quot;&lt;/em&gt;
 *     }
 * }&lt;/code&gt;
 * </pre>
 * 
 * while a <b>failure response</b> packet may look like this:<br>
 * <br>
 * 
 * <pre>
 * &lt;code&gt;{
 *     success: false,
 *     errorMessage: &lt;em&gt;&quot;Consignment reference not found&quot;&lt;/em&gt;
 * }&lt;/code&gt;
 * </pre>
 * 
 * <p>
 * Other data may be placed into the response for processing the <a
 * href="output/Ext.form.BasicForm.html" ext:cls="Ext.form.BasicForm">Form</a>'s
 * callback or event handler methods. The object decoded from this JSON is
 * available in the <a href="output/Ext.form.Action.html#Ext.form.Action-result"
 * ext:member="result" ext:cls="Ext.form.Action">result</a> property.
 * </p>
 */
@InstanceOf("Ext.form.Action.Load")
@ParseConfigMode(id = false, name = "params", ui = false, pmode = PersistenceMode.Custom, rmode = ReferenceMode.Config)
public class Load extends Action {
	public static final String COMPONENT_TYPE = "Ext.form.Action.Load";
	public static final String COMPONENT_FAMILY = "Ext.form.Action.Load";

	/**
	 * <p>
	 * Create a new {@link Load} instance with default property values.
	 * </p>
	 */
	public Load() {
		super();
		setRendererType(COMPONENT_FAMILY);
	}

	public String getFamily() {
		return (COMPONENT_FAMILY);
	}

	private Object[] _values;

	public Object saveState(FacesContext _context) {
		if (_values == null) {
			_values = new Object[1];
		}
		_values[0] = super.saveState(_context);

		return _values;
	}

	public void restoreState(FacesContext _context, Object _state) {
		_values = (Object[]) _state;
		super.restoreState(_context, _values[0]);

	}
}