package ext.toolbar;

import javax.el.ValueExpression;
import javax.faces.context.FacesContext;

import ext.annotation.InstanceOf;
import ext.annotation.ParseConfigMode;
import ext.annotation.PersistenceMode;
import ext.annotation.ReferenceMode;
import ext.annotation.XType;

/**
 *Note:This java code is auto generated by abner,do not edit it. A simple class
 * that renders text directly into a toolbar (with css class:<tt>'xtb-text'</tt>). Example
 * usage:
 * 
 * 
 * <pre>
 * &lt;code&gt;&lt;b&gt;new&lt;/b&gt; Ext.Panel({
 *     tbar : [
 *         {xtype: &lt;em&gt;'tbtext'&lt;/em&gt;, text: &lt;em&gt;'Item 1'&lt;/em&gt;} &lt;i&gt;// or simply &lt;em&gt;'Item 1'&lt;/em&gt;
 * &lt;/i&gt;
 *     ]
 * });&lt;/code&gt;
 * </pre>
 */
@XType("tbtext")
@InstanceOf("Ext.Toolbar.TextItem")
@ParseConfigMode(name = "items", pmode = PersistenceMode.ParentProperty, rmode = ReferenceMode.Config)
public class TextItem extends Item {
	public static final String COMPONENT_TYPE = "Ext.Toolbar.TextItem";
	public static final String COMPONENT_FAMILY = "Ext.Toolbar.TextItem";

	/**
	 * <p>
	 * Create a new {@link TextItem} instance with default property values.
	 * </p>
	 */
	public TextItem() {
		super();
		setRendererType(COMPONENT_FAMILY);
	}

	public String getFamily() {
		return (COMPONENT_FAMILY);
	}
	
	private String text;

	/**
	 * The text to display for this item (defaults to'')
	 */
	public String getText() {
		if (null != this.text) {
			return this.text;
		}
		ValueExpression _ve = getValueExpression("text");
		if (_ve != null) {
			return (String) _ve.getValue(getFacesContext().getELContext());
		} else {
			return null;
		}
	}

	/**
	 * <p>
	 * Set the value of the <code>text</code> property.
	 * </p>
	 */
	public void setText(String text) {
		this.text = text;
		this.handleConfig("text", text);
	}

	private Object[] _values;

	public Object saveState(FacesContext _context) {
		if (_values == null) {
			_values = new Object[2];
		}
		_values[0] = super.saveState(_context);
		_values[1] = text;
		return _values;
	}

	public void restoreState(FacesContext _context, Object _state) {
		_values = (Object[]) _state;
		super.restoreState(_context, _values[0]);
		this.text = (String) _values[1];
		this.handleConfig("text", this.text);
	}
}