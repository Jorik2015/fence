package ext.data;

import javax.faces.context.FacesContext;

import ext.annotation.InstanceOf;
import ext.annotation.ParseConfigMode;
import ext.annotation.PersistenceMode;
import ext.annotation.ReferenceMode;
import ext.annotation.XType;

/**
 *Note:This java code is auto generated by abner,do not edit it.
 * 
 * <p>
 * Small helper class to create an <a href="output/Ext.data.Store.html"
 * ext:cls="Ext.data.Store">Ext.data.Store</a> configured with an <a
 * href="output/Ext.data.DirectProxy.html"
 * ext:cls="Ext.data.DirectProxy">Ext.data.DirectProxy</a> and <a
 * href="output/Ext.data.JsonReader.html"
 * ext:cls="Ext.data.JsonReader">Ext.data.JsonReader</a> to make interacting
 * with an <a href="output/Ext.Direct.html" ext:cls="Ext.Direct">Ext.Direct</a>
 * Server-side <a href="output/Ext.direct.Provider.html"
 * ext:cls="Ext.direct.Provider">Provider</a> easier. To create a different
 * proxy/reader combination create a basic <a href="output/Ext.data.Store.html"
 * ext:cls="Ext.data.Store">Ext.data.Store</a> configured as needed.
 * </p>
 * 
 * <p>
 * <b>*Note:</b> Although they are not listed, this class inherits all of the
 * config options of:
 * </p>
 * 
 * <div>
 * <ul class="mdetail-params">
 * <li><b><a href="output/Ext.data.Store.html"
 * ext:cls="Ext.data.Store">Store</a></b></li>
 * 
 * <li><b><a href="output/Ext.data.JsonReader.html"
 * ext:cls="Ext.data.JsonReader">JsonReader</a></b></li>
 * 
 * <li style="list-style: none">
 * <div class="sub-desc">
 * <ul class="mdetail-params">
 * <li>
 * <tt><b><a href="output/Ext.data.JsonReader.html#Ext.data.JsonReader-root" ext:member="root" ext:cls="Ext.data.JsonReader">root</a></b></tt>
 * </li>
 * 
 * <li>
 * 
 * <tt><b><a href="output/Ext.data.JsonReader.html#Ext.data.JsonReader-idProperty" ext:member="idProperty" ext:cls="Ext.data.JsonReader">idProperty</a></b></tt>
 * </li>
 * 
 * <li>
 * 
 * <tt><b><a href="output/Ext.data.JsonReader.html#Ext.data.JsonReader-totalProperty" ext:member="totalProperty" ext:cls="Ext.data.JsonReader">totalProperty</a></b></tt>
 * </li>
 * </ul>
 * </div></li>
 * 
 * <li><b><a href="output/Ext.data.DirectProxy.html"
 * ext:cls="Ext.data.DirectProxy">DirectProxy</a></b></li>
 * 
 * <li style="list-style: none">
 * <div class="sub-desc">
 * <ul class="mdetail-params">
 * <li>
 * <tt><b><a href="output/Ext.data.DirectProxy.html#Ext.data.DirectProxy-directFn" ext:member="directFn" ext:cls="Ext.data.DirectProxy">directFn</a></b></tt>
 * </li>
 * 
 * <li>
 * 
 * <tt><b><a href="output/Ext.data.DirectProxy.html#Ext.data.DirectProxy-paramOrder" ext:member="paramOrder" ext:cls="Ext.data.DirectProxy">paramOrder</a></b></tt>
 * </li>
 * 
 * <li>
 * 
 * <tt><b><a href="output/Ext.data.DirectProxy.html#Ext.data.DirectProxy-paramsAsHash" ext:member="paramsAsHash" ext:cls="Ext.data.DirectProxy">paramsAsHash</a></b></tt>
 * </li>
 * </ul>
 * </div></li>
 * </ul>
 * </div>
 */
@XType("directstore")
@InstanceOf("Ext.data.DirectStore")
@ParseConfigMode(ui = false, name = "store", pmode = PersistenceMode.ParentProperty, rmode = ReferenceMode.Var)
public class DirectStore extends Store {
	private static final long serialVersionUID = 2655144752209232840L;
	public static final String COMPONENT_TYPE = "Ext.data.DirectStore";
	public static final String COMPONENT_FAMILY = "Ext.data.DirectStore";

	/**
	 * <p>
	 * Create a new {@link DirectStore} instance with default property values.
	 * </p>
	 */
	public DirectStore() {
		super();
		setRendererType(COMPONENT_FAMILY);
	}

	public String getFamily() {
		return (COMPONENT_FAMILY);
	}

	private Object[] _values;

	public Object saveState(FacesContext _context) {
		if (_values == null) {
			_values = new Object[1];
		}
		_values[0] = super.saveState(_context);

		return _values;
	}

	public void restoreState(FacesContext _context, Object _state) {
		_values = (Object[]) _state;
		super.restoreState(_context, _values[0]);

	}
}