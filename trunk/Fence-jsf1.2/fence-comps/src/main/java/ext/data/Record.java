package ext.data;

import javax.faces.context.FacesContext;

import ext.annotation.InstanceOf;
import ext.base.ExtOutput;

/**
 *Note:This java code is auto generated by abner,do not edit it.
 * 
 * <p>
 * Instances of this class encapsulate both Record <em>definition</em>
 * information, and Record <em>value</em> information for use in <a
 * href="output/Ext.data.Store.html" ext:cls="Ext.data.Store">Ext.data.Store</a>
 * objects, or any code which needs to access Records cached in an <a
 * href="output/Ext.data.Store.html" ext:cls="Ext.data.Store">Ext.data.Store</a>
 * object.
 * </p>
 * 
 * <p>
 * Constructors for this class are generated by passing an Array of field
 * definition objects to <a
 * href="output/Ext.data.Record.html#Ext.data.Record-create" ext:member="create"
 * ext:cls="Ext.data.Record">create</a>. Instances are usually only created by
 * <a href="output/Ext.data.Reader.html"
 * ext:cls="Ext.data.Reader">Ext.data.Reader</a> implementations when processing
 * unformatted data objects.
 * </p>
 * 
 * <p>
 * Note that an instance of a Record class may only belong to one <a
 * href="output/Ext.data.Store.html" ext:cls="Ext.data.Store">Store</a> at a
 * time. In order to copy data from one Store to another, use the <a
 * href="output/Ext.data.Record.html#Ext.data.Record-copy" ext:member="copy"
 * ext:cls="Ext.data.Record">copy</a> method to create an exact copy of the
 * Record, and insert the new instance into the other Store.
 * </p>
 * 
 * <p>
 * When serializing a Record for submission to the server, be aware that it
 * contains many private properties, and also a reference to its owning Store
 * which in turn holds references to its Records. This means that a whole Record
 * may not be encoded using <a href="output/Ext.util.JSON.encode.html"
 * ext:cls="Ext.util.JSON.encode">Ext.util.JSON.encode</a>. Instead, use the
 * 
 * <code><a href="output/Ext.data.Record.html#Ext.data.Record-data" ext:member="data" ext:cls="Ext.data.Record">data</a></code>
 * and
 * <code><a href="output/Ext.data.Record.html#Ext.data.Record-id" ext:member="id" ext:cls="Ext.data.Record">id</a></code>
 * properties.
 * </p>
 * 
 * <p>
 * Record objects generated by this constructor inherit all the methods of
 * Ext.data.Record listed below.
 * </p>
 */
@InstanceOf("Ext.data.Record")
public class Record extends ExtOutput {
	public static final String COMPONENT_TYPE = "Ext.data.Record";
	public static final String COMPONENT_FAMILY = "Ext.data.Record";

	/**
	 * <p>
	 * Create a new {@link Record} instance with default property values.
	 * </p>
	 */
	public Record() {
		super();
		setRendererType(COMPONENT_FAMILY);
	}

	public String getFamily() {
		return (COMPONENT_FAMILY);
	}

	private Object[] _values;

	public Object saveState(FacesContext _context) {
		if (_values == null) {
			_values = new Object[1];
		}
		_values[0] = super.saveState(_context);

		return _values;
	}

	public void restoreState(FacesContext _context, Object _state) {
		_values = (Object[]) _state;
		super.restoreState(_context, _values[0]);

	}
}